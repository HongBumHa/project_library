<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dgit.project_library.dao.BookDao">
	
	<resultMap type="Book" id="BookResult">
		<id property="bookCode" column="book_Code"/>
		<result property="bookName" column="book_name"/>
		<result property="author" column="author"/>
		<result property="publicName" column="public_name"/>
		<result property="price" column="price"/>
		<result property="amount" column="amount"/>
		<result property="allRentalCount" column="all_rentel_count"/>
	</resultMap>
	
	<sql id="selectSql">
		select * from book
	</sql>
	
	<sql id="selectSqlAll">
		select book_code, book_name, author, p.public_name, price, amount, all_rentel_count from book b, publisher p
	</sql>
	
	<sql id="selectSqlForChart">
		select sum(all_rentel_count) from book where book_code like #{bookCode}
	</sql>
	
	<sql id="selectSqlRow">
		select count(*) from book where book_code like #{bookCode}
	</sql>
	
	<sql id="insertSql">
		insert into book (book_code, book_name, author, public_name, price, amount) 
			values(#{bookCode}, #{bookName}, #{author}, #{publicName}, #{price}, #{amount})
	</sql>
	
	<sql id="updateSql">
		update book set book_name=#{bookName}, author=#{author}, public_name=#{publicName}, price=#{price}, amount=#{amount} where book_code=#{bookCode}
	</sql>
	
	<sql id="deleteSql">
		delete from book 
	</sql>
	
	<sql id="whereSqlCode">
		<where>
			<if test="bookCode != null">
				book_code = #{bookCode}
			</if>
		</where>
	</sql>
	
	<sql id = "whereSqlBookData">
		<where>
			<if test = "author != null">
				author like #{author}
			</if>
			<if test = "publicName != null">
				and public_name like #{publicName}
			</if>
			<if test="bookName != null">
				and book_name like #{bookName}
			</if>
		</where>
	</sql>

	<sql id="whereSqlAll">
		<where>
			<if test="bookCode != null">
				b.public_name=p.public_code and book_code like #{bookCode}
			</if>
			<if test="bookName != null">
				and b.public_name=p.public_code and book_name like #{bookName}
			</if>
			<if test="author != null">
				and b.public_name=p.public_code and author like #{author}
			</if>
			<if test="publicName != null">
				and b.public_name=p.public_code and p.public_name like #{publicName}
			</if>
		</where>
	</sql>
	
	
	
	<!-- selectBookByAll -->
	<select id="selectBookByAll" parameterType="Book" resultMap="BookResult">
		<include refid="selectSqlAll"/>
		where b.public_name=p.public_code order by book_code
	</select>
	
	<select id="selectBookByCode" parameterType="Book" resultMap="BookResult">
		<include refid="selectSqlAll"/>
		where b.public_name=p.public_code and book_code=#{bookCode}
	</select>
	
	<!-- selectBookBySomething -->
	<select id="selectBookBySomething" parameterType="map" resultMap="BookResult">
		<include refid="selectSqlAll"/>
		<include refid="whereSqlAll"/>
	</select>
	
	<resultMap type="Book" id="testBook">
		<result  property="allRentalCount" column="sum(all_rentel_count)"/>
	</resultMap>
	
	<!-- selectRentalCountForChart -->
	<select id="selectRentalCountForChart" parameterType="Book" resultMap="testBook">
		<include refid="selectSqlForChart"></include>
	</select>
	
	
	<!-- selectBookGroupRow -->
	<resultMap type="Book" id="bookGroupRow">
		<result  property="allRentalCount" column="count(*)"/>
	</resultMap>
	
	<select id="selectBookGroupRow" parameterType="Book" resultMap="bookGroupRow">
		<include refid="selectSqlRow"/>
	</select>
	
	
	<!-- insertBook -->
	<insert id="insertBook">
		<include refid="insertSql"/>
	</insert>
	
	<!-- updateBook -->
	<update id="updateBook" parameterType="Book">
		<include refid="updateSql"/>
	</update>
	
	<!-- deleteBook -->
	<delete id="deleteBook">
		<include refid="deleteSql"/>
		<include refid="whereSqlCode"/>
	</delete>
	
	<sql id="selectByRankcountSql">
		select price,book_name,author,p.public_name,amount,all_rentel_count from book b, publisher p where all_rentel_count > 0 and p.public_name = (select public_name from publisher where public_code = b.public_name)
order by all_rentel_count desc;
	</sql>
	<select id="selectByRank" resultMap="BookResult">
		<include refid="selectByRankcountSql"/>
	</select>
	
	<select id = "selectByWhereBookData" parameterType="Book" resultType="Book">
		<include refid="selectSql"/>
		<include refid="whereSqlBookData"/>
	</select>
	
	<sql id="whereBigMiddleGroupCode">
		<where>
			book_code like '#{bookCode}%'
		</where>
	</sql>
	
	<select id = "selectByBigMiddleGroupCode" parameterType="Book" resultType="Book">
		<include refid="selectSql"/>
		<include refid="whereBigMiddleGroupCode"/>
	</select>

</mapper>